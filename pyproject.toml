# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "sparrow-flir"
version = "0.1.0"
description = ""
license = "CC0-1.0"
authors = ["Sparrow Computing <ben@sparrow.dev>"]
packages = [{ include = "sparrow_flir" }]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
Pillow = "^9.2.0"
numpy = "^1.23.2"

[tool.poetry.dev-dependencies]
bandit = "^1.7.1"
black = "^22.3.0"
isort = "^5.10.1"
mypy = "^0.910"
mypy-extensions = "^0.4.3"
pydocstyle = "^6.1.1"
pylint = "^2.11.1"
pytest = "^6.2.5"
pyupgrade = "^2.29.1"
safety = "^1.10.3"
coverage = "^6.1.2"
coverage-badge = "^1.1.0"
pytest-html = "^3.1.1"
pytest-cov = "^3.0.0"
jupyter = "^1.0.0"
pre-commit = "^2.17.0"

[tool.black]
# https://github.com/psf/black
target-version = ["py39"]
line-length = 88

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | _build
    | buck-out
    | build
    | dist
    | env
)/
'''

[tool.isort]
profile = "black"

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.messages_control]
disable = ["all"]
enable = ["unused-import"]

[tool.pydocstyle]
convention = "numpy"
match = '((?!_test).)*\.py'
add-ignore = "D100"

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "sparrow_flir"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true